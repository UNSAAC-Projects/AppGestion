<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="EDITAR.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxMaxRest.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANpSURBVGhD7ZrbahNRFIZzYfVeQS3qnaenkRaJpV4JOSdGL0TxMg9gjX0XifgEaqXVS6H6BB6g
        MYKHEv1X+NmEzQrO7MNMwswPHw3NXv9aMxn2rL1nKqVKlSpVqqjqdrvnm83mbbALXoJD8A38JvJZ/iff
        7bZarW2JYfhqqNfrnUHx98Bb8NeRPRx8X7xou3yq1+sXUeQzFPvDKt6HCRi22+0LTJO/UNBao9G4j7/f
        WWQM5CQO+v3+KabNR51O5xoKeT9XWGze4eReZfpshcQ3UUDMX3URY+TeZBnZCAnvIPEfq5AsOcZ80WY5
        cYVkLSt5bshMzrLiiJfxsZ04R6SWDZYXVrVa7TLMj+aSLQsyj1xnmWFUrVZPwjTUbPxc7qty38bnkfWd
        KwdgjeX6C2aP58y9kAOlrbSel7QxjjykrZ/k14CZdDxaktTQ1kgb44hc2uu0dRfbRS2BE7Q10sa4gkl1
        h7Zu4kIgZG8c9YDBxGvBAQNZ9WjGztDaSBvjSY/W6YVgnyWeCq2NtDE+4LJ+Q+t0QvA6mM6bhYD2RtoY
        T6a4E5yjfXIhUHYqNEMvaG+kjfEFE+0W7ZMLgbItoxr6QHsjbUwAhrRPLgTJPpNm5gXtjbQxARjRPrkQ
        9MkyCQLtjbQxATikfXIh6KtlsohZb8ywaErZe39hWHIh6JdlojLfG8dWit77J0OSC0GFO+Ckl/Qoi4Pm
        wb6wci/iM8OSC0EfLZMg0N5IGxMAp0mrcLelYjUeaM+2FSNvaG+kjfEFC4hbtE8uacARXJzFgwjBe5aZ
        N7Q20sb4gCvzFa3TSza6NVMfaG2kjfEBl3OX1unFLZ5gG3gCrY20MR74bfGIYDK0TL2grZE2xoMntHXX
        Cm3TjoO9LgGzR5a5M/NtaOCN+Ae09RfM1oA8ztASpWXWe6fsjf/HPgj3qEW0zA/T5E0ElhlWmPI3kWCp
        HpeiphssL45wb0YeNXnWSBdYZ1lxhbOa+ysPoMVyshESboAxC8iSo+iX8SLh8r6CAkLN3knYl8mT6fPR
        YDA4gTMuL6bF/LVnL6bJmwhMm79QkDyLegpC9t4TnMydYB1UDHHBcRe8Bi7r6aks8fC3h8v3NG1XQ+jD
        z6L4LRQvCxDpqj4A2Q2VLWBBPsv/5LuhjJUYhpcqVapUqYKpUvkHy/oyMdke3HgAAAAASUVORK5CYII=
</value>
  </data>
</root>